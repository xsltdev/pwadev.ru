{"extends":"/samples/v3-base.json","files":{"my-timer.ts":{"content":"import {LitElement, html, css} from 'lit';\nimport {customElement, property, state} from 'lit/decorators.js';\n/* playground-fold */\nimport {play, pause, replay} from './icons.js';\n/* playground-fold-end */\n\n@customElement(\"my-timer\")\nexport class MyTimer extends LitElement {\n  static styles = css`/* playground-fold */\n\n    :host {\n      display: inline-block;\n      min-width: 4em;\n      text-align: center;\n      padding: 0.2em;\n      margin: 0.2em 0.1em;\n    }\n    footer {\n      user-select: none;\n      font-size: 0.6em;\n    }\n    /* playground-fold-end */`;\n\n  @property() duration = 60;\n  @state() private end: number | null = null;\n  @state() private remaining = 0;\n\n  render() {\n    const {remaining, running} = this;\n    const min = Math.floor(remaining / 60000);\n    const sec = pad(min, Math.floor(remaining / 1000 % 60));\n    const hun = pad(true, Math.floor(remaining % 1000 / 10));\n    return html`\n      ${min ? `${min}:${sec}` : `${sec}.${hun}`}\n      <footer>\n        ${remaining === 0 ? '' : running ?\n          html`<span @click=${this.pause}>${pause}</span>` :\n          html`<span @click=${this.start}>${play}</span>`}\n        <span @click=${this.reset}>${replay}</span>\n      </footer>\n    `;\n  }\n  /* playground-fold */\n\n  start() {\n    this.end = Date.now() + this.remaining;\n    this.tick();\n  }\n\n  pause() {\n    this.end = null;\n  }\n\n  reset() {\n    const running = this.running;\n    this.remaining = this.duration * 1000;\n    this.end = running ? Date.now() + this.remaining : null;\n  }\n\n  tick() {\n    if (this.running) {\n      this.remaining = Math.max(0, this.end! - Date.now());\n      requestAnimationFrame(() => this.tick());\n    }\n  }\n\n  get running() {\n    return this.end && this.remaining;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.reset();\n  }/* playground-fold-end */\n\n}\n/* playground-fold */\n\nfunction pad(pad: unknown, val: number) {\n  return pad ? String(val).padStart(2, '0') : val;\n}/* playground-fold-end */\n"},"index.html":{"content":"<!doctype html>\n<head><!-- playground-fold -->\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\n  <link href=\"https://fonts.googleapis.com/css2?family=JetBrains+Mono:ital,wght@1,800&display=swap\" rel=\"stylesheet\">\n  <script type=\"module\" src=\"./my-timer.js\"></script>\n  <style>\n    body {\n      font-family: 'JetBrains Mono', monospace;\n      font-size: 36px;\n    }\n  </style>\n  <!-- playground-fold-end -->\n</head>\n<body>\n  <my-timer duration=\"7\"></my-timer>\n  <my-timer duration=\"60\"></my-timer>\n  <my-timer duration=\"300\"></my-timer>\n</body>\n"},"icons.ts":{"content":"import {html} from 'lit';\n\nexport const replay = html`<svg xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><title>Replay</title><g><rect fill=\"none\" height=\"24\" width=\"24\"/><rect fill=\"none\" height=\"24\" width=\"24\"/><rect fill=\"none\" height=\"24\" width=\"24\"/></g><g><g/><path d=\"M12,5V1L7,6l5,5V7c3.31,0,6,2.69,6,6s-2.69,6-6,6s-6-2.69-6-6H4c0,4.42,3.58,8,8,8s8-3.58,8-8S16.42,5,12,5z\"/></g></svg>`;\nexport const pause = html`<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><title>Pause</title><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"/></svg>`;\nexport const play = html`<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><title>Play</title><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M10 8.64L15.27 12 10 15.36V8.64M8 5v14l11-7L8 5z\"/></svg>`;\n"}},"previewHeight":"125px"}