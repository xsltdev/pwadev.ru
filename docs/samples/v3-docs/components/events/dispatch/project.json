{"extends":"/samples/v3-base.json","files":{"my-dispatcher.ts":{"content":"import {LitElement, html} from 'lit';\nimport {customElement, query} from 'lit/decorators.js';\n\n@customElement('my-dispatcher')\nclass MyDispatcher extends LitElement {\n  @query('input', true) _input!: HTMLInputElement;\n  protected render() {\n    return html`\n      <p>Name: <input></p>\n      <p><button @click=${this._dispatchLogin}>Login</button></p>\n    `;\n  }\n  private _dispatchLogin() {\n    const name = this._input.value.trim();\n    if (name) {\n      const options = {\n        detail: {name},\n        bubbles: true,\n        composed: true\n      };\n      this.dispatchEvent(new CustomEvent('mylogin', options));\n    }\n  }\n}\n"},"my-listener.ts":{"content":"import {LitElement, html} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\n@customElement('my-listener')\nclass MyListener extends LitElement {\n  @property() name = '';\n  protected render() {\n    return html`\n      <p @mylogin=${this._loginListener}><slot></slot></p>\n      <p>Login: ${this.name}</p>`;\n  }\n  private _loginListener(e: CustomEvent) {\n    this.name = e.detail.name;\n  }\n}\n"},"index.html":{"content":"<script type=\"module\" src=\"./my-listener.js\"></script>\n<script type=\"module\" src=\"./my-dispatcher.js\"></script>\n\n<my-listener>\n  <my-dispatcher></my-dispatcher>\n</my-listener>\n"}}}