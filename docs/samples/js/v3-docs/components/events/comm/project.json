{"extends":"/samples/v3-base.json","files":{"my-dispatcher.js":{"content":"import {LitElement, html} from 'lit';\n\nclass MyDispatcher extends LitElement {\n  static properties = {\n    label: {},\n    message: {},\n  };\n\n  constructor() {\n    super();\n    this.label = 'Check me!';\n    this.message = this.defaultMessage;\n  }\n  defaultMessage = 'ðŸ™‚';\n  _resetMessage;\n  render() {\n    return html`\n      <label><input type=\"checkbox\" @click=${this._tryChange}>${this.label}</label>\n      <div>${this.message}</div>\n    `;\n  }\n  _tryChange(e) {\n    const detail = {message: this.message};\n    const event = new CustomEvent('checked', {\n      detail,\n      bubbles: true,\n      composed: true,\n      cancelable: true,\n    });\n    this.dispatchEvent(event);\n    if (event.defaultPrevented) {\n      e.preventDefault();\n    }\n    this.message = detail.message;\n  }\n  updated() {\n    clearTimeout(this._resetMessage);\n    this._resetMessage = setTimeout(\n      () => (this.message = this.defaultMessage),\n      1000\n    );\n  }\n}\ncustomElements.define('my-dispatcher', MyDispatcher);\n"},"my-listener.js":{"content":"import {LitElement, html} from 'lit';\n\nclass MyListener extends LitElement {\n  static properties = {\n    canCheck: {},\n  };\n\n  constructor() {\n    super();\n    this.canCheck = false;\n  }\n  render() {\n    return html`\n      <p @checked=${this._checkedHandler}><slot></slot></p>\n      <hr>\n      <p>${this.canCheck ? 'Allowing' : 'Preventing'} check</p>\n      <p><button @click=${this._clickHandler}>Toggle</button></p>`;\n  }\n  _checkedHandler(e) {\n    if (!this.canCheck) {\n      e.preventDefault();\n      e.detail.message = 'âœ… Prevented!!';\n    }\n  }\n  _clickHandler() {\n    this.canCheck = !this.canCheck;\n  }\n}\ncustomElements.define('my-listener', MyListener);\n"},"index.html":{"content":"<script type=\"module\" src=\"./my-listener.js\"></script>\n<script type=\"module\" src=\"./my-dispatcher.js\"></script>\n\n<my-listener>\n  <my-dispatcher></my-dispatcher>\n</my-listener>\n"}},"previewHeight":"180px"}