{"extends":"/samples/base.json","title":"asyncAppend directive","description":"Demo exploring use of the asyncAppend directive.","section":"Directives","files":{"my-element.js":{"content":"import {LitElement, html} from 'lit';\nimport {asyncAppend} from 'lit/directives/async-append.js';\n\nasync function* tossCoins(count) {\n  for (let i = 0; i < count; i++) {\n    yield Math.random() > 0.5 ? 'Heads' : 'Tails';\n    await new Promise((r) => setTimeout(r, 1000));\n  }\n}\n\nclass MyElement extends LitElement {\n  static properties = {\n    tosses: {state: true},\n  };\n\n  constructor() {\n    super();\n    this.tosses = tossCoins(10);\n  }\n\n  render() {\n    return html`\n      <ul>${asyncAppend(this.tosses, (v) => html`<li>${v}</li>`)}</ul>`;\n  }\n}\ncustomElements.define('my-element', MyElement);\n"},"index.html":{"content":"<style>\n  body { font-family: sans-serif; }\n</style>\n\n<script type=\"module\" src=\"./my-element.js\"></script>\n\n<my-element></my-element>\n"}}}