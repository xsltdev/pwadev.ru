{"extends":"/samples/checkable-tutorial-base.json","files":{"index.html":{"content":"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script type=\"module\" src=\"./date-display.js\"></script>\n    <!-- playground-hide --><script type=\"module\" src=\"./_check-code.js\"></script><!-- playground-hide-end -->\n  </head>\n  <body>\n    <date-display></date-display>\n    <script>\n      const dateDisplay = document.querySelector('date-display');\n      dateDisplay.date = new Date('05/05/22');\n    </script>\n  </body>\n</html>\n"},"date-display.js":{"selected":true,"content":"import {LitElement, html} from 'lit';\n\nexport class DateDisplay extends LitElement {\n  static properties = {\n    date: {attribute: false},\n  };\n\n  constructor() {\n    super();\n    this.date = new Date();\n  }\n\n  render() {\n    const locale = 'en-US';\n    const options = {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n    };\n    return html`\n      <p>The given date is: ${this.date.toLocaleDateString(locale, options)}</p>\n    `;\n  }\n}\ncustomElements.define('date-display', DateDisplay);\n"},"_check-code.js":{"hidden":true,"content":"import {installCodeChecker} from './_check-code-helpers.js';\n\ninstallCodeChecker(async () => {\n  let passed = true;\n  let message = '';\n\n  try {\n    const element = document.body.querySelector('date-display');\n    element.setAttribute('datestr', 'attribute not set');\n    element.setAttribute('date-str', '5');\n    await element.updateComplete;\n\n    if (element.dateStr === undefined) {\n      passed = false;\n      message = `Define the 'dateStr' property in date-display.`;\n    } else if (element.dateStr === 'attribute not set') {\n      passed = false;\n      message = `Set the attribute of the 'dateStr' reactive property to 'date-str'.`;\n    } else if (element.dateStr === 5 || element.dateStr === true) {\n      passed = false;\n      message = `Make sure 'dateStr' is of 'type: String'`;\n    } else if (element.dateStr !== '5') {\n      passed = false;\n      message = `The 'dateStr' property is not a reactive property`;\n    }\n  } catch (e) {\n    passed = false;\n  }\n\n  message = passed ? `'dateStr' is now a reactive property that accepts strings!` : message;\n\n  window.location.reload();\n  return {passed, message};\n});"}}}