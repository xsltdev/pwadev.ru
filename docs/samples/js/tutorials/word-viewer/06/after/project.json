{"extends":"/samples/base.json","files":{"word-viewer.js":{"content":"import {css, html, LitElement} from 'lit';\n\nclass WordViewer extends LitElement {\n  static properties = {\n    playDirection: {state: true},\n    idx: {state: true},\n    words: {},\n  };\n  static styles = css`\n    :host {\n      background-color: white;\n      color: violet;\n      cursor: pointer;\n      display: block;\n    }\n    pre {\n      padding: 0.2em;\n    }\n  `;\n\n  constructor() {\n    super();\n    this.playDirection = 1;\n    this.idx = 0;\n    this.words = 'initial value';\n  }\n\n  intervalTimer;\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.intervalTimer = setInterval(this.tickToNextWord, 1000);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    clearInterval(this.intervalTimer);\n    this.intervalTimer = undefined;\n  }\n\n  render() {\n    const splitWords = this.words.split('.');\n    const idx =\n      ((this.idx % splitWords.length) + splitWords.length) % splitWords.length;\n    const word = splitWords[idx];\n    return html`<pre\n      @click=${this.switchPlayDirection}\n    >${word}</pre>`;\n  }\n\n  tickToNextWord = () => {\n    this.idx += this.playDirection;\n  };\n\n  switchPlayDirection() {\n    this.playDirection *= -1;\n  }\n}\ncustomElements.define('word-viewer', WordViewer);\n"},"index.html":{"content":"<script type=\"module\" src=\"word-viewer.js\"></script>\n\n<word-viewer words=\"1.2.3.4\"></word-viewer>\n"}}}