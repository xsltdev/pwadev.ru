{"extends":"/samples/base.json","files":{"word-viewer.js":{"selected":true,"content":"import {css, html, LitElement} from 'lit';\n\nclass WordViewer extends LitElement {\n  static properties = {\n    idx: {state: true},\n    words: {},\n  };\n  static styles = css`\n    :host {\n      background-color: white;\n      color: violet;\n      cursor: pointer;\n      display: block;\n    }\n    pre {\n      padding: 0.2em;\n    }\n  `;\n\n  constructor() {\n    super();\n    // TODO: Add `playDirection` state.\n    this.idx = 0;\n    this.words = 'initial value';\n  }\n\n  intervalTimer;\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.intervalTimer = setInterval(this.tickToNextWord, 1000);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    clearInterval(this.intervalTimer);\n    this.intervalTimer = undefined;\n  }\n\n  render() {\n    const splitWords = this.words.split('.');\n    // TODO: Update math so it won't go negatively out of bounds.\n    const word = splitWords[this.idx % splitWords.length];\n    // TODO: Add @click event handler that calls `this.switchPlayDirection`\n    return html`<pre>${word}</pre>`;\n  }\n  // TODO: Increment by `this.playDirection`\n  tickToNextWord = () => {\n    this.idx += 1;\n  };\n}\ncustomElements.define('word-viewer', WordViewer);\n"},"index.html":{"content":"<script type=\"module\" src=\"word-viewer.js\"></script>\n\n<word-viewer words=\"1.2.3.4\"></word-viewer>\n"}}}