{"extends":"/samples/base.json","files":{"index.html":{"content":"<!DOCTYPE html>\n<html>\n  <head>\n    <script type=\"module\" src=\"my-element.js\"></script>\n  </head>\n  <body>\n    <my-element></my-element>\n  </body>\n</html>\n"},"my-element.js":{"selected":true,"content":"import {LitElement, html, css} from 'lit';\n\nexport class MyElement extends LitElement {\n  static properties = {\n    _showMessage: {state: true},\n  };\n  static styles = css`\n    :host {\n      display: block;\n    }\n    #message {\n      position: fixed;\n      background-color: cornflowerblue;\n      color: white;\n      padding: 10px;\n    }\n  `;\n\n  constructor() {\n    super();\n    this._showMessage = false;\n  }\n\n  get _message() {\n    return this.renderRoot?.querySelector('#message') ?? null;\n  }\n\n  render() {\n    return html`\n      <button @click=${() =>\n        (this._showMessage = !this._showMessage)}>Click me</button>\n      <div id=\"message\" ?hidden=${!this._showMessage}>\n        TADA\n      </div>\n    `;\n  }\n\n  updated(changedProperties) {\n    if (changedProperties.has('_showMessage')) {\n      const final = this._message.getBoundingClientRect().width;\n      const starting = 0 - final;\n      this._message.animate(\n        [\n          {transform: `translateX(${starting}px)`},\n          {transform: `translateX(0)`},\n        ],\n        {\n          duration: 500,\n          easing: 'ease-out',\n        }\n      );\n    }\n  }\n}\ncustomElements.define('my-element', MyElement);\n"}}}