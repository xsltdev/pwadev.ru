{"extends":"/samples/base.json","files":{"index.html":{"hidden":true,"content":"<!DOCTYPE html>\n<head>\n  <script type=\"module\" src=\"./time-ago-example.js\"></script>\n</head>\n<body>\n  <time-ago-example></time-ago-example>\n</body>\n"},"comment-card.js":{"hidden":true,"content":"/* playground-hide */\nimport {html, css, LitElement} from 'lit';\n\nexport class CommentCard extends LitElement {\n  static properties = {\n    subject: {},\n    content: {},\n    user: {},\n    time: {},\n    avatar: {},\n  };\n\n  static styles = css`\n    :host {\n      border: 1px solid #666;\n      border-radius: 5px;\n      background: #ddd;\n      display: flex;\n      font-family: sans-serif;\n      padding: 5px;\n      max-width: 500px;\n    }\n    .avatar {\n      height: 40px;\n      width: 40px;\n      background: lightblue;\n      border: 1px solid #666;\n      border-radius: 20px;\n    }\n    .subject {\n      font-weight: bold;\n    }\n    .usertime {\n      white-space: nowrap;\n    }\n    .body {\n      flex: 1;\n      margin-inline-start: 10px;\n    }\n  `;\n\n  constructor() {\n    super();\n    this.subject = 'Default title';\n    this.content = 'Lorem ipsum dolor sit amet.';\n    this.user = 'username';\n    this.time = 'one minute ago';\n    this.avatar = '//joeschmoe.io/api/v1/jess';\n  }\n\n  render() {\n    return html`\n      <img class=\"avatar\" src=${this.avatar}>\n      <div class=\"body\">\n        <div class=\"header\">\n          <span class=\"subject\">${this.subject}</span>\n          <span class=\"usertime\">@${this.user} â€¢ ${this.time}</span>\n        </div>\n        <div class=\"content\">${this.content}</div>\n      </div>\n    `;\n  }\n}\ncustomElements.define('comment-card', CommentCard);\n"},"time-ago.js":{"hidden":true,"content":"import {directive} from 'lit/directive.js';\nimport {AsyncDirective} from 'lit/async-directive.js';\nimport {format} from 'timeago.js';\n\nclass TimeAgoDirective extends AsyncDirective {\n  timer;\n  time;\n\n  render(time) {\n    return format(time);\n  }\n\n  update(part, [time]) {\n    this.time = time;\n    if (this.isConnected) {\n      this.ensureTimerStarted();\n    }\n    return this.render(time);\n  }\n\n  ensureTimerStarted() {\n    if (this.timer === undefined) {\n      this.timer = setInterval(() => {\n        this.setValue(this.render(this.time));\n      }, 1000);\n    }\n  }\n\n  ensureTimerStopped() {\n    clearInterval(this.timer);\n    this.timer = undefined;\n  }\n\n  disconnected() {\n    this.ensureTimerStopped();\n  }\n\n  reconnected() {\n    this.ensureTimerStarted();\n  }\n}\n\nexport const timeAgo = directive(TimeAgoDirective);\n"},"time-ago-example.js":{"content":"/* playground-hide */\nimport {html, css, LitElement} from 'lit';\n\nimport {timeAgo} from './time-ago.js';\n\nimport './comment-card.js';\n\nconst timeNow = new Date();\n\nexport class TimeAgoExample extends LitElement {\n  static properties = {\n    chosenTime: {},\n  };\n\n  static styles = css`\n    hr { margin: 20px 0; }\n  `;\n\n  constructor() {\n    super();\n    this.chosenTime = new Date('2020-03-10');\n  }\n\n  /* playground-hide-end */\n  render() {\n    return html`\n      <p>This page was rendered ${timeAgo(timeNow)}.</p>\n      <hr>\n\n      Select your last vacation:\n      <input type=\"date\" .valueAsDate=${this.chosenTime} @change=${\n      this.updateTime\n    }>\n      <p>Your last vacation was ${timeAgo(this.chosenTime)}.</p>\n      <hr>\n\n      <comment-card user=\"litdeveloper\"\n                    time=${timeAgo(timeNow)}\n                    subject=\"Just tried AsyncDirectives!\"\n                    content=\"I just tried out these AsyncDirectives in Lit and they're pretty powerful!\">\n      </comment-card>\n    `;\n  }\n  /* playground-hide */\n\n  updateTime(event) {\n    const target = event.target;\n    this.chosenTime = target.valueAsDate;\n  }\n}\ncustomElements.define('time-ago-example', TimeAgoExample);\n/* playground-hide-end */\n"}}}