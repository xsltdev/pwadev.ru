{"extends":"/samples/v2-base.json","files":{"clock-controller.ts":{"content":"import {ReactiveController, ReactiveControllerHost} from 'lit';\n\nexport class ClockController implements ReactiveController {\n  host: ReactiveControllerHost;\n\n  value = new Date();\n  timeout: number;\n  private _timerID?: number;\n\n  constructor(host: ReactiveControllerHost, timeout = 1000) {\n    (this.host = host).addController(this);\n    this.timeout = timeout;\n  }\n  hostConnected() {\n    // Start a timer when the host is connected\n    this._timerID = setInterval(() => {\n      this.value = new Date();\n      // Update the host with new value\n      this.host.requestUpdate();\n    }, this.timeout);\n  }\n  hostDisconnected() {\n    // Clear the timer when the host is disconnected\n    clearInterval(this._timerID);\n    this._timerID = undefined;\n  }\n}\n"},"my-element.ts":{"content":"import {LitElement, html} from 'lit';\nimport {customElement} from 'lit/decorators.js';\nimport {ClockController} from './clock-controller.js';\n\n@customElement('my-element')\nclass MyElement extends LitElement {\n  // Create the controller and store it\n  private clock = new ClockController(this, 100);\n\n  // Use the controller in render()\n  render() {\n    const formattedTime = timeFormat.format(this.clock.value);\n    return html`Current time: ${formattedTime}`;\n  }\n}\n\nconst timeFormat = new Intl.DateTimeFormat('en-US', {\n  hour: 'numeric', minute: 'numeric', second: 'numeric',\n});\n"},"index.html":{"content":"<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./my-element.js\"></script>\n  </head>\n  <body>\n    <my-element></my-element>\n  </body>\n</html>\n"}}}