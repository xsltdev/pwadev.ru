{"extends":"/samples/v2-base.json","files":{"my-dispatcher.ts":{"content":"import {LitElement, html} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\n\n@customElement('my-dispatcher')\nclass MyDispatcher extends LitElement {\n  @property() label = 'Check me!';\n  defaultMessage = 'ðŸ™‚';\n  @property() message = this.defaultMessage;\n  private _resetMessage?: ReturnType<typeof setTimeout>;\n  protected render() {\n    return html`\n      <label><input type=\"checkbox\" @click=${this._tryChange}>${this.label}</label>\n      <div>${this.message}</div>\n    `;\n  }\n  private _tryChange(e: Event) {\n    const detail = {message: this.message};\n    const event = new CustomEvent('checked', {detail, bubbles: true, composed: true, cancelable: true});\n    this.dispatchEvent(event);\n    if (event.defaultPrevented) {\n      e.preventDefault();\n    }\n    this.message = detail.message;\n  }\n  protected updated() {\n    clearTimeout(this._resetMessage);\n    this._resetMessage =\n      setTimeout(() => this.message = this.defaultMessage, 1000);\n  }\n}\n"},"my-listener.ts":{"content":"import {LitElement, html} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\n\n@customElement('my-listener')\nclass MyListener extends LitElement {\n  @property() canCheck = false;\n  protected render() {\n    return html`\n      <p @checked=${this._checkedHandler}><slot></slot></p>\n      <hr>\n      <p>${this.canCheck ? 'Allowing' : 'Preventing'} check</p>\n      <p><button @click=${this._clickHandler}>Toggle</button></p>`;\n  }\n  private _checkedHandler(e: CustomEvent) {\n    if (!this.canCheck) {\n      e.preventDefault();\n      e.detail.message = 'âœ… Prevented!!';\n    }\n  }\n  private _clickHandler() {\n    this.canCheck = !this.canCheck;\n  }\n}\n"},"index.html":{"content":"<script type=\"module\" src=\"./my-listener.js\"></script>\n<script type=\"module\" src=\"./my-dispatcher.js\"></script>\n\n<my-listener>\n  <my-dispatcher></my-dispatcher>\n</my-listener>\n"}},"previewHeight":"180px"}