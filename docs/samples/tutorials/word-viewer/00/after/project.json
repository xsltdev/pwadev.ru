{"extends":"/samples/base.json","files":{"index.html":{"content":"<!DOCTYPE html>\n<html>\n  <head>\n    <script type=\"module\" src=\"word-viewer.js\"></script>\n    <style>\n      body {\n        font-family: 'Open Sans', sans-serif;\n        padding-left: 0.5em;\n      }\n      word-viewer {\n        font-size: 2em;\n      }\n    </style>\n  </head>\n  <body>\n    <p>Click the bouncing ball!</p>\n<word-viewer words='   █\n\n\n\n_______1.   ▇\n\n\n\n_______2.   ▍\n   ▊\n   ▍\n\n_______3.\n\n   \n   ▍\n__▃█▃__4.\n\n   \n   \n_▂▃▄▃▂_5.\n   ▍\n   ▍\n   ▍\n___▍___6.   ▊\n   ▍\n\n\n_______7.   ▇\n\n\n\n_______8.   █\n\n\n\n_______9'></word-viewer>\n  </body>\n</html>\n"},"word-viewer.ts":{"content":"import { css, html, LitElement } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\n@customElement('word-viewer')\nclass WordViewer extends LitElement {\n  static styles = css`\n    :host {\n      background-color: white;\n      color: violet;\n      cursor: pointer;\n      display: block;\n    }\n    pre {\n      padding: 0.2em;\n    }\n    .backwards {\n      color: white;\n      background-color: violet;\n    }\n  `\n\n  @state() private playDirection: -1 | 1 = 1;\n  @state() private idx = 0;\n  @property() words = 'initial value';\n\n  private intervalTimer?: number;\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.intervalTimer = setInterval(this.tickToNextWord, 250);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    clearInterval(this.intervalTimer);\n    this.intervalTimer = undefined;\n  }\n\n  render() {\n    const splitWords = this.words.split('.');\n    const idx = ((this.idx % splitWords.length) + splitWords.length) % splitWords.length;\n    const word = splitWords[idx];\n    return html`<pre\n      class=\"${classMap({ backwards: this.playDirection === -1 })}\"\n      @click=${this.switchPlayDirection}\n    >${word}</pre>`;\n  }\n\n  tickToNextWord = () => { this.idx += this.playDirection; };\n\n  switchPlayDirection() {\n    this.playDirection *= -1;\n  }\n}\n"}}}