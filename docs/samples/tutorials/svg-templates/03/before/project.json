{"extends":"/samples/base.json","files":{"repeat-pattern.ts":{"content":"import type { SVGTemplateResult } from \"lit\";\n\nimport { LitElement, html, svg } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\nconst createElement = (chars: string): SVGTemplateResult => svg`\n  <text\n    id=\"chars\"\n    dominant-basline=\"hanging\"\n    font-family=\"monospace\"\n    font-size=\"24px\">\n    ${chars}\n  </text>\n`;\n\nconst createMotif = (\n  numPrints: number,\n  offset: number = 0,\n): SVGTemplateResult => {\n  const rotation = 360 / numPrints;\n\n  const prints = [];\n  let currRotation = offset;\n  for (let index = 0; index < numPrints; index++) {\n    currRotation += rotation;\n    prints.push(svg`\n      <use\n        href=\"#chars\"\n        transform=\"rotate(${currRotation}, 0, 0)\">\n      </use>\n    `);\n  }\n\n  return svg`<g transform=\"translate(50, 50)\">${prints}</g>`;\n};\n\n@customElement('repeat-pattern')\nexport class RepeatPattern extends LitElement {\n  @property({type: String}) chars = \"lit\";\n  @property({type: Number, attribute: \"num-prints\"}) numPrints = 7;\n  @property({\n    type: Number,\n    attribute: \"rotation-offset\",\n  }) rotationOffset = 0;\n\n  render() {\n    return html`\n      <svg height=\"100%\" width=\"100%\">\n        <defs>\n          ${createElement(this.chars)}\n        </defs>\n        ${createMotif(\n          this.numPrints,\n          this.rotationOffset,\n        )}\n      </svg>\n    `;\n  }\n}\n"},"index.html":{"content":"<!DOCTYPE html>\n<html>\n  <head>\n    <script type=\"module\" src=\"repeat-pattern.js\"></script>\n    <style>\n      body {\n        height: 100vh;\n        margin: 0;\n      }\n\n      repeat-pattern {\n        height: 100vh;\n        width: 100vw;\n      }\n    </style>\n  </head>\n  <body>\n    <repeat-pattern></repeat-pattern>\n  </body>\n</html>\n"}}}