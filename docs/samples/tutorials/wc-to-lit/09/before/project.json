{"extends":"/samples/base.json","files":{"rating-element.ts":{"content":"export class RatingElement extends HTMLElement {\n  private _rating = 0;\n  private _vote: 'up'|'down'|null = null;\n  private _boundOnUpClick = this._onUpClick.bind(this);\n  private _boundOnDownClick = this._onDownClick.bind(this);\n\n  connectedCallback() {\n    const shadowRoot = this.attachShadow({mode: 'open'});\n    const templateContent = document.querySelector<HTMLTemplateElement>('#rating-element-template')!.content;\n    const clonedContent = templateContent.cloneNode(true);\n    shadowRoot.appendChild(clonedContent);\n\n    this.shadowRoot!.querySelector<HTMLElement>('.rating')!.innerText = `${this.rating}`;\n\n    this.shadowRoot!\n      .querySelector('.thumb_up')!\n      .addEventListener('click', this._boundOnUpClick);\n    this.shadowRoot!\n      .querySelector('.thumb_down')!\n      .addEventListener('click', this._boundOnDownClick);\n  }\n\n  disconnectedCallback() {\n    this.shadowRoot!\n      .querySelector('.thumb_up')!\n      .removeEventListener('click', this._boundOnUpClick);\n    this.shadowRoot!\n      .querySelector('.thumb_down')!\n      .removeEventListener('click', this._boundOnDownClick);\n  }\n\n  static get observedAttributes() {\n    return ['rating', 'vote'];\n  }\n\n  attributeChangedCallback(attributeName: string, _oldValue: string, newValue: string) {\n    if (attributeName === 'rating') {\n      const newRating = Number(newValue);\n\n      this.rating = newRating;\n    } else if (attributeName === 'vote') {\n      this.vote = newValue as 'up'|'down';\n    }\n  }\n\n  set rating(value) {\n    this._rating = value;\n\n    if (!this.shadowRoot) {\n      return;\n    }\n\n    const ratingEl = this.shadowRoot.querySelector<HTMLElement>('.rating');\n\n    if (ratingEl) {\n      ratingEl.innerText = `${this._rating}`;\n    }\n  }\n\n  get rating() {\n    return this._rating;\n  }\n\n  set vote(newValue) {\n    const oldValue = this._vote;\n    if (newValue === oldValue) {\n      return;\n    }\n\n    if (newValue === 'up') {\n      if (oldValue === 'down') {\n        this.rating += 2;\n      } else {\n        this.rating += 1;\n      }\n    } else if (newValue === 'down') {\n      if (oldValue === 'up') {\n        this.rating -= 2;\n      } else {\n        this.rating -= 1;\n      }\n    }\n\n    this._vote = newValue;\n    this.setAttribute('vote', newValue!);\n  }\n\n  get vote() {\n    return this._vote;\n  }\n\n  _onUpClick() {\n    this.vote = 'up';\n  }\n\n  _onDownClick() {\n    this.vote = 'down';\n  }\n }\n\n customElements.define('rating-element', RatingElement);\n"},"index.html":{"content":"<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"./rating-element.js\" type=\"module\"></script>\n  </head>\n  <body>\n    <template id=\"rating-element-template\">\n      <style>\n        :host {\n          display: inline-flex;\n          align-items: center;\n        }\n        button {\n          background: transparent;\n          border: none;\n          cursor: pointer;\n        }\n\n        :host([vote=up]) .thumb_up {\n          fill: green;\n        }\n\n        :host([vote=down]) .thumb_down {\n          fill: red;\n        }\n      </style>\n      <button class=\"thumb_down\" >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewbox=\"0 0 24 24\" width=\"24\"><path d=\"M15 3H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v2c0 1.1.9 2 2 2h6.31l-.95 4.57-.03.32c0 .41.17.79.44 1.06L9.83 23l6.59-6.59c.36-.36.58-.86.58-1.41V5c0-1.1-.9-2-2-2zm4 0v12h4V3h-4z\"/></svg>\n      </button>\n      <span class=\"rating\"></span>\n      <button class=\"thumb_up\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewbox=\"0 0 24 24\" width=\"24\"><path d=\"M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-2z\"/></svg>\n      </button>\n    </template>\n\n    <rating-element rating=\"5\"></rating-element>\n  </body>\n</html>\n"}}}