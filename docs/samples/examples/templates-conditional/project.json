{"extends":"/samples/base.json","title":"Conditional templates","description":"Use conditionals in a template.","section":"Template concepts","files":{"my-element.ts":{"content":"import {LitElement, html} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\n\n@customElement('my-element')\nexport class MyElement extends LitElement {\n  @property()\n  condition = true;\n\n  render() {\n    return html`\n      <p>Render content conditionally:</p>\n      ${this.condition\n        ? html`\n            <p>Render some HTML if condition is true.</p>\n          `\n        : html`\n            <p>Render some other HTML if condition is false.</p>\n          `}\n      <button @click=${() => {this.condition = !this.condition}}>Toggle condition</button>\n    `;\n  }\n}\n"},"index.html":{"content":"<!doctype html>\n<head>\n  <script type=\"module\" src=\"./my-element.js\"></script>\n</head>\n<body>\n  <my-element></my-element>\n</body>\n"}},"order":1}