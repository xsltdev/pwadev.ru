{"extends":"/samples/base.json","title":"asyncAppend directive","description":"Demo exploring use of the asyncAppend directive.","section":"Directives","files":{"my-element.ts":{"content":"import {LitElement, html} from 'lit';\nimport {customElement, state} from 'lit/decorators.js';\nimport {asyncAppend} from 'lit/directives/async-append.js';\n\nasync function *tossCoins(count: number) {\n  for (let i=0; i<count; i++) {\n    yield Math.random() > 0.5 ? 'Heads' : 'Tails';\n    await new Promise((r) => setTimeout(r, 1000));\n  }\n}\n\n@customElement('my-element')\nclass MyElement extends LitElement {\n\n  @state()\n  private tosses = tossCoins(10);\n\n  render() {\n    return html`\n      <ul>${asyncAppend(this.tosses, (v) => html`<li>${v}</li>`)}</ul>`;\n  }\n}\n"},"index.html":{"content":"<style>\n  body { font-family: sans-serif; }\n</style>\n\n<script type=\"module\" src=\"./my-element.js\"></script>\n\n<my-element></my-element>\n"}}}