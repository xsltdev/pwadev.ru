{"extends":"/samples/base.json","title":"asyncReplace directive","description":"Demo exploring use of the asyncReplace directive.","section":"Directives","files":{"my-element.ts":{"content":"import {LitElement, html} from 'lit';\nimport {customElement, state} from 'lit/decorators.js';\nimport {asyncReplace} from 'lit/directives/async-replace.js';\n\nasync function *countDown(count: number) {\n  while (count > 0) {\n    yield count--;\n    await new Promise((r) => setTimeout(r, 1000));\n  }\n}\n\n@customElement('my-element')\nclass MyElement extends LitElement {\n\n  @state()\n  private timer = countDown(10);\n\n  render() {\n    return html`Timer: <span>${asyncReplace(this.timer)}</span>.`;\n  }\n}\n"},"index.html":{"content":"<style>\n  body { font-family: sans-serif; }\n</style>\n\n<script type=\"module\" src=\"./my-element.js\"></script>\n\n<my-element></my-element>\n"}}}