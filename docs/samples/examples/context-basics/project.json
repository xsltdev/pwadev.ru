{"extends":"/samples/base.json","title":"Context Basics","description":"Share data from a provider element with Context.","section":"Managing Data","files":{"elements.ts":{"content":"import {html, LitElement} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\nimport {provide, consume, createContext} from '@lit/context';\n\nimport {providerStyles} from './styles.js';\n\nconst contextKey = Symbol('contextKey');\n// The values that will be provided and consumed in this demo will\n// be strings.\ntype ContextValue = string;\n// Context object, which acts like a key for the context.\n// The context object acts as a key. A consumer will only receive\n// values from a provider if their contexts match. A Symbol ensures\n// that this context will be unique.\nconst context = createContext<ContextValue>(contextKey);\n\n@customElement('provider-el')\nexport class ProviderEl extends LitElement {\n  static styles = providerStyles;\n\n  /**\n   * `data` will be provided to any consumer that is in the DOM tree below it.\n   */\n  @provide({context})\n  @property()\n  data = 'Initial';\n\n  render() {\n    return html`\n      <h3>Provider's data: <code>${this.data}</code></h3>\n      <slot></slot>\n    `;\n  }\n}\n\n@customElement('consumer-el')\nexport class ConsumerEl extends LitElement {\n  /**\n   * `providedData` will be populated by the first ancestor element which\n   * provides a value for `context`.\n   */\n  @consume({context})\n  providedData = '';\n\n  render() {\n    return html`<h3>Consumer data: <code>${this.providedData}</code></h3>`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'provider-el': ProviderEl;\n    'consumer-el': ConsumerEl;\n  }\n}\n"},"index.html":{"content":"<!DOCTYPE html>\n<script type=\"module\" src=\"./elements.js\"></script>\n<style>\n  :root {\n    font-family: sans-serif;\n  }\n</style>\n\n<h3>Basic Context Example</h3>\n<p>\n  The <code>&lt;consumer-el></code> receives its data from\n  <code>&lt;provider-el></code> without property drilling.\n</p>\n<hr>\n\n<provider-el>\n  <consumer-el></consumer-el>\n</provider-el>\n<hr>\n\n<provider-el data=\"specified from attribute\">\n  <consumer-el></consumer-el>\n</provider-el>\n<hr>\n\n<p>\n  Checkout our\n  <a\n    href=\"https://lit.dev/docs/data/context/\"\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n    >Context documentation</a\n  >!\n</p>\n"},"styles.ts":{"content":"import {css} from 'lit';\nexport const providerStyles = css`\n  slot {\n    display: block;\n    border: dashed 4px #dadada;\n    padding: 0px 10px;\n  }\n\n  :host {\n    display: block;\n    border: solid 4px #adadad;\n    padding: 2px;\n  }\n\n  h3 {\n    margin-top: 0;\n  }\n`;\n"}}}