{"extends":"/samples/base.json","order":1,"title":"React events","description":"Listen to react events from web components.","section":"@lit/react","files":{"app.tsx":{"contentType":"text/typescript-jsx","content":"import React from 'https://esm.sh/react@18';\nimport {createRoot} from 'https://esm.sh/react-dom@18/client';\nimport {createComponent} from '@lit/react';\nimport {ClickRoulette as ClickRouletteWC} from './click-roulette.js';\n\nconst ClickRoulette = createComponent({\n  react: React,\n  tagName: 'click-roulette',\n  elementClass: ClickRouletteWC,\n  // Defines props that will be event handlers for the named events\n  events: {\n    onPop: 'pop',\n    onReset: 'reset',\n  },\n});\n\nconst App = () => {\n  const [message, setMessage] = React.useState('ðŸ˜¬');\n\n  const handlePop = () => {\n    setMessage('ðŸŽ‰');\n  };\n\n  const handleReset = () => {\n    setMessage('ðŸ˜¬');\n  };\n\n  return (\n    <main>\n      <h1>Let's play Click Roulette!</h1>\n      <ClickRoulette onPop={handlePop} onReset={handleReset} />\n      <p>{message}</p>\n    </main>\n  );\n};\n\nconst root = createRoot(document.getElementById('app')!);\n\nroot.render(<App />);\n"},"click-roulette.ts":{"content":"import {html, css, LitElement} from 'lit';\nimport {customElement, property, state} from 'lit/decorators.js';\n\n/**\n * @fires pop Fires when count reaches a random number between 1-6.\n * @fires reset Fires when reset button is clicked.\n */\n@customElement('click-roulette')\nexport class ClickRoulette extends LitElement {\n  static styles = css`\n    div {\n      display: inline-block;\n      border: solid 1px gray;\n      background: white;\n      padding: 1em;\n    }\n  `;\n\n  @property({type: Number})\n  count = 0;\n\n  @property({type: Boolean})\n  fired = false;\n\n  @state()\n  private _loadedCount = Math.floor(Math.random() * 6) + 1;\n\n  handleClick(e: MouseEvent) {\n    e.stopPropagation();\n    if (++this.count === this._loadedCount) {\n      this.fired = true;\n      this.dispatchEvent(new Event('pop', {bubbles: true, composed: true}));\n    }\n  }\n\n  handleReset(e: MouseEvent) {\n    e.stopPropagation();\n    this.count = 0;\n    this.fired = false;\n    this._loadedCount = Math.floor(Math.random() * 6) + 1;\n    this.dispatchEvent(new Event('reset', {bubbles: true, composed: true}));\n  }\n\n  render() {\n    return html`\n      <div>\n        <p>Clicked: ${this.count}</p>\n        <button @click=${this.handleClick} ?disabled=${this.fired}>\n          Click\n        </button>\n        <button @click=${this.handleReset}>Reset</button>\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'click-roulette': ClickRoulette;\n  }\n}\n"},"react.d.ts":{"content":"declare module 'https://esm.sh/react@18' {\n  export default React;\n}\n\ndeclare module 'https://esm.sh/react-dom@18/client' {\n  export * from 'react-dom/client';\n}","hidden":true},"index.html":{"content":"<!doctype html>\n<head>\n  <script type=\"module\" src=\"./app.js\"></script>\n</head>\n<body>\n  <div id=\"app\"></div>\n</body>\n"},"package.json":{"content":"{\n  \"dependencies\": {\n    \"lit\": \"^3\",\n    \"@types/react\": \"18.2.7\",\n    \"@types/react-dom\": \"^18\",\n    \"@types/react-dom/client\": \"^18\"\n  }\n}","hidden":true}}}