{"extends":"/samples/base.json","title":"classMap directive","description":"Demo exploring use of the classMap directive.","section":"Directives","files":{"my-element.ts":{"content":"import {LitElement, html, css} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\n\n@customElement('my-element')\nexport class MyElement extends LitElement {\n\n  static styles = css`\n    .enabled {\n      background: lightgreen;\n    }\n    .hidden {\n      opacity: 0.2;\n    }\n    .padded {\n      padding: 10px;\n    }\n  `;\n\n  @property({type: Boolean})\n  enabled = true;\n\n  @property({type: Boolean})\n  hidden = false;\n\n  render() {\n    const classes = {\n      enabled: this.enabled,\n      hidden: this.hidden,\n      padded: true\n    };\n    return html`\n      <h3>classMap directive example</h3>\n\n      <div class=${classMap(classes)}>Classy text</div>\n      <hr>\n      <label>\n        <input type=\"checkbox\" .checked=${this.enabled} @change=${this.toggleEnabled}>\n        Enabled\n      </label>\n      <label>\n        <input type=\"checkbox\" .checked=${this.hidden} @change=${this.toggleHidden}>\n        Hidden\n      </label>\n    `;\n  }\n\n  private toggleEnabled() {\n    this.enabled = !this.enabled;\n  }\n\n  private toggleHidden() {\n    this.hidden = !this.hidden;\n  }\n}\n"},"index.html":{"content":"<style>\n  body { font-family: sans-serif; }\n</style>\n\n<script type=\"module\" src=\"./my-element.js\"></script>\n\n<my-element></my-element>\n"}}}