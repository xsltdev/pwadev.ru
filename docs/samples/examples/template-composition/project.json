{"extends":"/samples/base.json","title":"Template composition","description":"Compose a template from other templates by calling methods in a template expression.","section":"Template concepts","files":{"my-page.ts":{"content":"import {LitElement, html} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\n\n\n@customElement('my-page')\nclass MyPage extends LitElement {\n\n  @property({attribute: false})\n  article = {\n    title: 'Template composition',\n    text: `Defining partial templates as instance methods\n           breaks the template into manageable piecesâ€”and\n           allows a subclass to override individual parts of the template.`\n  };\n\n  headerTemplate() {\n    return html`<header><h1>${this.article.title}</h1></header>`;\n  }\n\n  articleTemplate() {\n    return html`<article>${this.article.text}</article>`;\n  }\n\n  render() {\n    return html`\n      ${this.headerTemplate()}\n      ${this.articleTemplate()}\n    `;\n  }\n}\n"},"index.html":{"content":"<!doctype html>\n<html>\n<head>\n  <script type=\"module\" src=\"./my-page.js\"></script>\n</head>\n<body>\n  <my-page></my-page>\n</body>\n</html>\n"}}}