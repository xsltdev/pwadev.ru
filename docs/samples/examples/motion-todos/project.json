{"extends":"/samples/base.json","title":"Todos List Transitions","description":"Animated list of todos.","section":"@lit-labs/motion","files":{"motion-todos.ts":{"content":"import {LitElement, html} from 'lit';\nimport {customElement, property, query} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\nimport {repeat} from 'lit/directives/repeat.js';\nimport {animate, fadeOut, flyBelow} from '@lit-labs/motion';\nimport {styles} from './styles.js';\nimport {TextField} from '@material/mwc-textfield';\nimport {Checkbox} from '@material/mwc-checkbox';\nimport '@material/mwc-textfield';\nimport '@material/mwc-button';\nimport '@material/mwc-checkbox';\nimport '@material/mwc-formfield';\n\nconst data = [\n  {id: 1, value: 'Go running.', completed: false},\n  {id: 2, value: 'Strength training', completed: true},\n  {id: 3, value: 'Walk with friends.', completed: false},\n  {id: 4, value: 'Feed the cats.', completed: true},\n  {id: 5, value: 'Shop for dinner.', completed: false},\n  {id: 6, value: 'Order clothes.', completed: false},\n  {id: 7, value: 'BBQ!', completed: false},\n];\n\ntype DataItem = typeof data[number];\n\n@customElement('motion-todos')\nexport class MotionTodos extends LitElement {\n  static styles = styles;\n\n  static shadowRootOptions = {\n    mode: 'open' as ShadowRootMode,\n    delegatesFocus: true,\n  };\n\n  @property({type: Array}) data = data;\n\n  @query('mwc-textfield') textField!: TextField;\n\n  addItem() {\n    if (!this.textField.value) {\n      return;\n    }\n    const nextId = this.data[this.data.length - 1].id + 1;\n    this.data = [\n      ...this.data,\n      {\n        id: nextId,\n        value: this.textField.value,\n        completed: false,\n      },\n    ];\n    this.textField.value = '';\n  }\n\n  removeItem(item: DataItem) {\n    this.data = this.data.filter((i) => i != item);\n  }\n\n  updateItem(updatingItem: DataItem, completed: boolean) {\n    this.data = this.data.map((item) => {\n      if (updatingItem === item) {\n        updatingItem.completed = completed;\n      }\n      return item;\n    });\n  }\n\n  render() {\n    const keyframeOptions = {\n      duration: 500,\n      fill: 'both' as FillMode,\n    };\n    const list = (completed = false) => html`<div\n      class=\"list ${classMap({completed})}\"\n    >\n      <h3>${completed ? `Completed` : `Todos`}</h3>\n      <ul tabindex=\"-1\">\n        ${repeat(\n          this.data.filter((item) =>\n            completed ? item.completed : !item.completed\n          ),\n          (item) => item.id,\n          (item) => html`<li\n            ${animate({\n              keyframeOptions,\n              in: flyBelow,\n              out: fadeOut,\n              stabilizeOut: true,\n              id: `${item.id}:${completed ? 'right' : 'left'}`,\n              inId: `${item.id}:${completed ? 'left' : 'right'}`,\n              skipInitial: true,\n            })}\n          >\n            <mwc-formfield label=\"${item.id}. ${item.value}\"\n              ><mwc-checkbox\n                type=\"checkbox\"\n                ?checked=${completed}\n                @change=${(e: Event) =>\n                  this.updateItem(item, (e.target! as Checkbox).checked)}\n              ></mwc-checkbox></mwc-formfield\n            ><button @click=${() => this.removeItem(item)}>\n              remove_circle_outline\n            </button>\n          </li>`\n        )}\n      </ul>\n    </div>`;\n    return html`\n      <mwc-textfield outlined label=\"Enter a todo...\"></mwc-textfield>\n      <div class=\"controls\">\n        <mwc-button @click=${this.addItem} raised>Add Todo</mwc-button>\n      </div>\n      <div class=\"lists\">${list()} ${list(true)}</div>\n    `;\n  }\n}\n"},"styles.ts":{"content":"import {css} from 'lit';\n\nexport const styles = [\n  css`\n    :host {\n      display: inline-block;\n      outline: none;\n      padding: 8px;\n      --mdc-theme-primary: #0069c0;\n      --mdc-theme-secondary: #1b5e20;\n      --mdc-typography-body2-font-size: 1.1rem;\n      --mdc-typography-body2-font-weight: 600;\n      --mdc-checkbox-unchecked-color: black;\n    }\n\n    mwc-textfield {\n      display: block;\n      margin-top: 16px;\n      --mdc-shape-small: 12px;\n    }\n\n    .controls {\n      display: flex;\n      padding: 8px 0;\n      justify-content: flex-end;\n    }\n\n    .lists {\n      display: flex;\n    }\n\n    .list {\n      flex: 1;\n    }\n\n    ul {\n      margin: 0;\n      padding: 0;\n      outline: none;\n    }\n\n    li {\n      will-change: transform;\n      position: relative;\n      background: #ffeb3b;\n      padding: 8px;\n      border-radius: 12px;\n      margin: 8px;\n      display: flex;\n      align-items: center;\n    }\n\n    li > button {\n      border: none;\n      background: none;\n      outline: none;\n      font-family: 'Material Icons';\n      font-size: 24px;\n      cursor: pointer;\n    }\n\n    li > mwc-formfield {\n      flex: 1;\n    }\n\n    .list.completed li {\n      background: #4caf50;\n    }\n  `,\n];\n"},"index.html":{"content":"<!DOCTYPE html>\n<head>\n  <script type=\"module\" src=\"./motion-todos.js\"></script>\n  <link\n    href=\"https://fonts.googleapis.com/css?family=Material+Icons&display=block\"\n    rel=\"stylesheet\"\n  />\n  <style>\n    body {\n      font-family: sans-serif;\n      display: flex;\n      justify-content: center;\n    }\n\n    motion-todos {\n      width: 600px;\n    }\n\n    @media screen and (max-width: 600px) {\n      motion-todos {\n        width: 100%;\n      }\n    }\n  </style>\n</head>\n<body>\n  <motion-todos></motion-todos>\n</body>\n"},"package.json":{"content":"{\n  \"dependencies\": {\n    \"lit\": \"^3.0.0\",\n    \"@lit-labs/motion\": \"^1.0.1\",\n    \"@material/mwc-textfield\": \"^0.25.1\",\n    \"@material/mwc-checkbox\": \"^0.25.1\",\n    \"@material/mwc-button\": \"^0.25.1\",\n    \"@material/mwc-formfield\": \"^0.25.1\"\n  }\n}","hidden":true}},"order":6}